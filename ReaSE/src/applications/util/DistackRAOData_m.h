//
// Generated file, do not edit! Created by opp_msgc 4.1 from applications/util/DistackRAOData.msg.
//

#ifndef _DISTACKRAODATA_M_H_
#define _DISTACKRAODATA_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// dll export symbol
#ifndef REASE_API 
#  if defined(REASE_EXPORT)
#    define REASE_API  OPP_DLLEXPORT
#  elif defined(REASE_IMPORT)
#    define REASE_API  OPP_DLLIMPORT
#  else
#    define REASE_API 
#  endif
#endif

// cplusplus {{
#include "IPvXAddress.h"
#include "ReaSEDefs.h"
const int DISTACK_RAO_PACKET_SIZE = 48;
// }}



/**
 * Class generated from <tt>applications/util/DistackRAOData.msg</tt> by opp_msgc.
 * <pre>
 * packet DistackRAOData
 * {
 * 	IPvXAddress requester;
 * 	IPvXAddress target;
 * 	int requesterPort;
 * 	int id;
 * }
 * </pre>
 */
class REASE_API DistackRAOData : public ::cPacket
{
  protected:
    ::IPvXAddress requester_var;
    ::IPvXAddress target_var;
    int requesterPort_var;
    int id_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DistackRAOData&);

  public:
    DistackRAOData(const char *name=NULL, int kind=0);
    DistackRAOData(const DistackRAOData& other);
    virtual ~DistackRAOData();
    DistackRAOData& operator=(const DistackRAOData& other);
    virtual DistackRAOData *dup() const {return new DistackRAOData(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual IPvXAddress& getRequester();
    virtual const IPvXAddress& getRequester() const {return const_cast<DistackRAOData*>(this)->getRequester();}
    virtual void setRequester(const IPvXAddress& requester_var);
    virtual IPvXAddress& getTarget();
    virtual const IPvXAddress& getTarget() const {return const_cast<DistackRAOData*>(this)->getTarget();}
    virtual void setTarget(const IPvXAddress& target_var);
    virtual int getRequesterPort() const;
    virtual void setRequesterPort(int requesterPort_var);
    virtual int getId() const;
    virtual void setId(int id_var);
};

inline void doPacking(cCommBuffer *b, DistackRAOData& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, DistackRAOData& obj) {obj.parsimUnpack(b);}


#endif // _DISTACKRAODATA_M_H_
