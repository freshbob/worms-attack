//
// Generated file, do not edit! Created by opp_msgc 4.1 from applications/ids/IDS_message.msg.
//

#ifndef _IDS_MESSAGE_M_H_
#define _IDS_MESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// dll export symbol
#ifndef REASE_API 
#  if defined(REASE_EXPORT)
#    define REASE_API  OPP_DLLEXPORT
#  elif defined(REASE_IMPORT)
#    define REASE_API  OPP_DLLIMPORT
#  else
#    define REASE_API 
#  endif
#endif

// cplusplus {{
#include "IDSModule.h"
// }}



/**
 * Class generated from <tt>applications/ids/IDS_message.msg</tt> by opp_msgc.
 * <pre>
 * packet IDS_Message {
 *     IDS IDS;
 * }
 * </pre>
 */
class REASE_API IDS_Message : public ::cPacket
{
  protected:
    ::IDS IDS_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const IDS_Message&);

  public:
    IDS_Message(const char *name=NULL, int kind=0);
    IDS_Message(const IDS_Message& other);
    virtual ~IDS_Message();
    IDS_Message& operator=(const IDS_Message& other);
    virtual IDS_Message *dup() const {return new IDS_Message(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual IDS& getIDS();
    virtual const IDS& getIDS() const {return const_cast<IDS_Message*>(this)->getIDS();}
    virtual void setIDS(const IDS& IDS_var);
};

inline void doPacking(cCommBuffer *b, IDS_Message& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, IDS_Message& obj) {obj.parsimUnpack(b);}


#endif // _IDS_MESSAGE_M_H_
