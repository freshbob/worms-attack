# Makefile.in generated by automake 1.11 from Makefile.am.
# src/base/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



##################################################
#           Distack base functionality           #
##################################################



pkgdatadir = $(datadir)/distack
pkgincludedir = $(includedir)/distack
pkglibdir = $(libdir)/distack
pkglibexecdir = $(libexecdir)/distack
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
#am__append_1 = -ggdb -DDEBUG
#am__append_2 = -DREMOTE_XML
am__append_3 = -DOMNET_SIMULATION
am__append_4 = \
  message/remote/RemoteCommSystemOmnetPathbased.cpp \
  message/remote/RemoteCommSystemOmnetRing.cpp \
  message/remote/RemoteCommSystemOmnetTcp.cpp

#am__append_5 = \
#  message/remote/RemoteCommSystemTcpSocket.cpp \
#  message/remote/RemoteCommSystemGist.cpp

am__append_6 = \
  message/remote/RemoteCommSystemOmnetPathbased.h \
  message/remote/RemoteCommSystemOmnetRing.h \
  message/remote/RemoteCommSystemOmnetTcp.h

#am__append_7 = \
#  message/remote/RemoteCommSystemTcpSocket.h \
#  message/remote/RemoteCommSystemGist.h

am__append_8 = network/omnetpp/NetworkInterfaceOmnetpp.cpp
#am__append_9 = network/libpcap/NetworkInterfacePcap.cpp
am__append_10 = network/omnetpp/NetworkInterfaceOmnetpp.h
#am__append_11 = network/libpcap/NetworkInterfacePcap.h
subdir = src/base
DIST_COMMON = $(am__nobase_libdistackbase_a_HEADERS_DIST) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_libtooldev.m4 \
	$(top_srcdir)/m4/ax_omnetinet.m4 \
	$(top_srcdir)/m4/ax_pcapdev.m4 $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/ax_xercescdev.m4 $(top_srcdir)/m4/boost.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libdistackbase_adir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libdistackbase_a_AR = $(AR) $(ARFLAGS)
libdistackbase_a_LIBADD =
am__libdistackbase_a_SOURCES_DIST = common/DistackInfo.cpp \
	common/Helper.cpp common/InterruptableSleeper.cpp \
	common/SubnetCounterTree.cpp common/PatriciaTrie.cpp \
	common/Timer.cpp common/FileLogOutputter.cpp common/Log.cpp \
	common/LogLevel.cpp common/LogOutputter.cpp \
	common/StdOutLogOutputter.cpp common/GenericRoutingTable.cpp \
	configuration/Configuration.cpp configuration/triggerconf.cpp \
	message/Message.cpp message/MessagingNode.cpp \
	message/MessagingSystem.cpp \
	message/remote/RemoteMessagingSystem.cpp \
	message/remote/RemoteCommSystem.cpp \
	message/remote/RemoteCommSystemNone.cpp \
	message/remote/RemoteCommSystemOmnetPathbased.cpp \
	message/remote/RemoteCommSystemOmnetRing.cpp \
	message/remote/RemoteCommSystemOmnetTcp.cpp \
	message/remote/RemoteCommSystemTcpSocket.cpp \
	message/remote/RemoteCommSystemGist.cpp module/Channel.cpp \
	module/ChannelManager.cpp module/DynamicLibrary.cpp \
	module/FrameDistribution.cpp module/Module.cpp \
	module/ModuleManager.cpp protocol/ArpPacket.cpp \
	protocol/EthernetPacket.cpp protocol/Frame.cpp \
	protocol/IcmpPacket.cpp protocol/IpPacket.cpp \
	protocol/Ipv6Packet.cpp protocol/Packet.cpp \
	protocol/PayloadPacket.cpp protocol/TcpPacket.cpp \
	protocol/MplsPacket.cpp protocol/UdpPacket.cpp \
	protocol/PacketFactory.cpp protocol/ProtocolNameResolver.cpp \
	network/FrameBuffer.cpp network/NetworkInterface.cpp \
	network/NetworkManager.cpp \
	network/omnetpp/NetworkInterfaceOmnetpp.cpp \
	network/libpcap/NetworkInterfacePcap.cpp
am__objects_1 = RemoteCommSystemOmnetPathbased.$(OBJEXT) \
	RemoteCommSystemOmnetRing.$(OBJEXT) \
	RemoteCommSystemOmnetTcp.$(OBJEXT)
#am__objects_2 =  \
#	RemoteCommSystemTcpSocket.$(OBJEXT) \
#	RemoteCommSystemGist.$(OBJEXT)
am__objects_3 =  \
	NetworkInterfaceOmnetpp.$(OBJEXT)
#am__objects_4 =  \
#	NetworkInterfacePcap.$(OBJEXT)
am_libdistackbase_a_OBJECTS = DistackInfo.$(OBJEXT) Helper.$(OBJEXT) \
	InterruptableSleeper.$(OBJEXT) SubnetCounterTree.$(OBJEXT) \
	PatriciaTrie.$(OBJEXT) Timer.$(OBJEXT) \
	FileLogOutputter.$(OBJEXT) Log.$(OBJEXT) LogLevel.$(OBJEXT) \
	LogOutputter.$(OBJEXT) StdOutLogOutputter.$(OBJEXT) \
	GenericRoutingTable.$(OBJEXT) Configuration.$(OBJEXT) \
	triggerconf.$(OBJEXT) Message.$(OBJEXT) \
	MessagingNode.$(OBJEXT) MessagingSystem.$(OBJEXT) \
	RemoteMessagingSystem.$(OBJEXT) RemoteCommSystem.$(OBJEXT) \
	RemoteCommSystemNone.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) Channel.$(OBJEXT) ChannelManager.$(OBJEXT) \
	DynamicLibrary.$(OBJEXT) FrameDistribution.$(OBJEXT) \
	Module.$(OBJEXT) ModuleManager.$(OBJEXT) ArpPacket.$(OBJEXT) \
	EthernetPacket.$(OBJEXT) Frame.$(OBJEXT) IcmpPacket.$(OBJEXT) \
	IpPacket.$(OBJEXT) Ipv6Packet.$(OBJEXT) Packet.$(OBJEXT) \
	PayloadPacket.$(OBJEXT) TcpPacket.$(OBJEXT) \
	MplsPacket.$(OBJEXT) UdpPacket.$(OBJEXT) \
	PacketFactory.$(OBJEXT) ProtocolNameResolver.$(OBJEXT) \
	FrameBuffer.$(OBJEXT) NetworkInterface.$(OBJEXT) \
	NetworkManager.$(OBJEXT) $(am__objects_3) $(am__objects_4)
libdistackbase_a_OBJECTS = $(am_libdistackbase_a_OBJECTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libdistackbase_a_SOURCES)
DIST_SOURCES = $(am__libdistackbase_a_SOURCES_DIST)
am__nobase_libdistackbase_a_HEADERS_DIST = common/DistackInfo.h \
	common/Helper.h common/InterruptableSleeper.h \
	common/SubnetCounterTree.h common/PatriciaTrie.h \
	common/Timer.h common/FileLogOutputter.h common/Log.h \
	common/LogLevel.h common/LogOutputter.h \
	common/StdOutLogOutputter.h common/GenericRoutingTable.h \
	configuration/Configuration.h configuration/triggerconf.h \
	message/Message.h message/MessagingNode.h \
	message/MessagingSystem.h \
	message/remote/RemoteMessagingSystem.h \
	message/remote/RemoteCommSystem.h \
	message/remote/RemoteCommSystemNone.h \
	message/remote/RemoteCommSystemOmnetPathbased.h \
	message/remote/RemoteCommSystemOmnetRing.h \
	message/remote/RemoteCommSystemOmnetTcp.h \
	message/remote/RemoteCommSystemTcpSocket.h \
	message/remote/RemoteCommSystemGist.h module/Channel.h \
	module/ChannelManager.h module/DistackModuleInterface.h \
	module/DynamicLibrary.h module/FrameDistribution.h \
	module/Module.h module/ModuleManager.h protocol/ArpPacket.h \
	protocol/EthernetPacket.h protocol/Frame.h \
	protocol/IcmpPacket.h protocol/IpPacket.h \
	protocol/Ipv6Packet.h protocol/Packet.h \
	protocol/PayloadPacket.h protocol/TcpPacket.h \
	protocol/MplsPacket.h protocol/UdpPacket.h \
	protocol/PacketFactory.h protocol/ProtocolNameResolver.h \
	network/FrameBuffer.h network/NetworkInterface.h \
	network/NetworkManager.h \
	network/omnetpp/NetworkInterfaceOmnetpp.h \
	network/libpcap/NetworkInterfacePcap.h
HEADERS = $(nobase_libdistackbase_a_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/kacper/omnetpp-4.1/workspace/distack-1.2.3-dev/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/kacper/omnetpp-4.1/workspace/distack-1.2.3-dev/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/kacper/omnetpp-4.1/workspace/distack-1.2.3-dev/missing --run autoconf
AUTOHEADER = ${SHELL} /home/kacper/omnetpp-4.1/workspace/distack-1.2.3-dev/missing --run autoheader
AUTOMAKE = ${SHELL} /home/kacper/omnetpp-4.1/workspace/distack-1.2.3-dev/missing --run automake-1.11
AWK = gawk
BOOST_CPPFLAGS = -I/usr/include 
BOOST_SERIALIZATION_LDFLAGS = -L/usr/lib -R/usr/lib
BOOST_SERIALIZATION_LIBS = -lboost_serialization-mt
BOOST_SIGNALS_LDFLAGS = -L/usr/lib -R/usr/lib
BOOST_SIGNALS_LIBS = -lboost_signals-mt
BOOST_SYSTEM_LDFLAGS = -L/usr/lib -R/usr/lib
BOOST_SYSTEM_LIBS = -lboost_system-mt
BOOST_THREAD_LDFLAGS = -L/usr/lib -R/usr/lib
BOOST_THREAD_LIBS = -lboost_thread-mt 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -I/home/kacper/omnetpp-4.1/include -I/home/kacper/omnetpp-4.1/workspace/inet/src/networklayer/ipv4 -I/home/kacper/omnetpp-4.1/workspace/inet/src/base -I/home/kacper/omnetpp-4.1/workspace/inet/src/networklayer/contract -I/home/kacper/omnetpp-4.1/workspace/inet/src/networklayer/common -I/home/kacper/omnetpp-4.1/workspace/inet/src/linklayer/contract -I/home/kacper/omnetpp-4.1/workspace/inet/src/transport/tcp -I/home/kacper/omnetpp-4.1/workspace/inet/src/transport/udp -I/home/kacper/omnetpp-4.1/workspace/inet/src/transport/contract -I/home/kacper/omnetpp-4.1/workspace/inet/src/networklayer/arp -I/home/kacper/omnetpp-4.1/workspace/ReaSE/src/transport/contract -I/home/kacper/omnetpp-4.1/workspace/ReaSE/src/base -I/home/kacper/omnetpp-4.1/workspace/ReaSE/src/applications/util
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"distack\" -DPACKAGE_TARNAME=\"distack\" -DPACKAGE_VERSION=\"1.2.2-dev\" -DPACKAGE_STRING=\"distack\ 1.2.2-dev\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"distack\" -DVERSION=\"1.2.2-dev\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_LIBXERCES_C=1 -DHAVE_LIBPTHREAD=1 -DHAVE_LIBLTDL=1 -DHAVE_BOOST_THREAD_HPP=1 -DHAVE_BOOST_ARCHIVE_TEXT_OARCHIVE_HPP=1 -DHAVE_BOOST_SIGNAL_HPP=1 -DHAVE_BOOST_SYSTEM_ERROR_CODE_HPP=1 -DHAVE_BOOST_ASIO_HPP=1 -DHAVE_BOOST_SYSTEM_ERROR_CODE_HPP=1
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lltdl -lpthread -lxerces-c 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/kacper/omnetpp-4.1/workspace/distack-1.2.3-dev/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = distack
PACKAGE_BUGREPORT = 
PACKAGE_NAME = distack
PACKAGE_STRING = distack 1.2.2-dev
PACKAGE_TARNAME = distack
PACKAGE_URL = 
PACKAGE_VERSION = 1.2.2-dev
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.2.2-dev
abs_builddir = /home/kacper/omnetpp-4.1/workspace/distack-1.2.3-dev/src/base
abs_srcdir = /home/kacper/omnetpp-4.1/workspace/distack-1.2.3-dev/src/base
abs_top_builddir = /home/kacper/omnetpp-4.1/workspace/distack-1.2.3-dev
abs_top_srcdir = /home/kacper/omnetpp-4.1/workspace/distack-1.2.3-dev
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/kacper/omnetpp-4.1/workspace/distack-1.2.3-dev/install-sh
libdir = /usr/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
lib_LIBRARIES = libdistackbase.a
AM_CPPFLAGS = -fPIC -DLINUX -D_LINUX -I../ -D_REENTRANT \
	-D_FILE_OFFSET_BITS=64 -pthread -fvisibility=default \
	$(am__append_1) $(am__append_2) $(am__append_3)

########### source files start here ###########

#-------------------> common

#-------------------> configuration

#-------------------> message

#-------------------> modules

#-------------------> protocols

#-------------------> network
libdistackbase_a_SOURCES = common/DistackInfo.cpp common/Helper.cpp \
	common/InterruptableSleeper.cpp common/SubnetCounterTree.cpp \
	common/PatriciaTrie.cpp common/Timer.cpp \
	common/FileLogOutputter.cpp common/Log.cpp common/LogLevel.cpp \
	common/LogOutputter.cpp common/StdOutLogOutputter.cpp \
	common/GenericRoutingTable.cpp configuration/Configuration.cpp \
	configuration/triggerconf.cpp message/Message.cpp \
	message/MessagingNode.cpp message/MessagingSystem.cpp \
	message/remote/RemoteMessagingSystem.cpp \
	message/remote/RemoteCommSystem.cpp \
	message/remote/RemoteCommSystemNone.cpp $(am__append_4) \
	$(am__append_5) module/Channel.cpp module/ChannelManager.cpp \
	module/DynamicLibrary.cpp module/FrameDistribution.cpp \
	module/Module.cpp module/ModuleManager.cpp \
	protocol/ArpPacket.cpp protocol/EthernetPacket.cpp \
	protocol/Frame.cpp protocol/IcmpPacket.cpp \
	protocol/IpPacket.cpp protocol/Ipv6Packet.cpp \
	protocol/Packet.cpp protocol/PayloadPacket.cpp \
	protocol/TcpPacket.cpp protocol/MplsPacket.cpp \
	protocol/UdpPacket.cpp protocol/PacketFactory.cpp \
	protocol/ProtocolNameResolver.cpp network/FrameBuffer.cpp \
	network/NetworkInterface.cpp network/NetworkManager.cpp \
	$(am__append_8) $(am__append_9)
nobase_libdistackbase_a_HEADERS = common/DistackInfo.h common/Helper.h \
	common/InterruptableSleeper.h common/SubnetCounterTree.h \
	common/PatriciaTrie.h common/Timer.h common/FileLogOutputter.h \
	common/Log.h common/LogLevel.h common/LogOutputter.h \
	common/StdOutLogOutputter.h common/GenericRoutingTable.h \
	configuration/Configuration.h configuration/triggerconf.h \
	message/Message.h message/MessagingNode.h \
	message/MessagingSystem.h \
	message/remote/RemoteMessagingSystem.h \
	message/remote/RemoteCommSystem.h \
	message/remote/RemoteCommSystemNone.h $(am__append_6) \
	$(am__append_7) module/Channel.h module/ChannelManager.h \
	module/DistackModuleInterface.h module/DynamicLibrary.h \
	module/FrameDistribution.h module/Module.h \
	module/ModuleManager.h protocol/ArpPacket.h \
	protocol/EthernetPacket.h protocol/Frame.h \
	protocol/IcmpPacket.h protocol/IpPacket.h \
	protocol/Ipv6Packet.h protocol/Packet.h \
	protocol/PayloadPacket.h protocol/TcpPacket.h \
	protocol/MplsPacket.h protocol/UdpPacket.h \
	protocol/PacketFactory.h protocol/ProtocolNameResolver.h \
	network/FrameBuffer.h network/NetworkInterface.h \
	network/NetworkManager.h $(am__append_10) $(am__append_11)
AM_LDFLAGS = -static
libdistackbase_adir = ${pkgincludedir}/base
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/base/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/base/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libdir)' && rm -f "$$files" )"; \
	cd "$(DESTDIR)$(libdir)" && rm -f $$files

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libdistackbase.a: $(libdistackbase_a_OBJECTS) $(libdistackbase_a_DEPENDENCIES) 
	-rm -f libdistackbase.a
	$(libdistackbase_a_AR) libdistackbase.a $(libdistackbase_a_OBJECTS) $(libdistackbase_a_LIBADD)
	$(RANLIB) libdistackbase.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ArpPacket.Po
include ./$(DEPDIR)/Channel.Po
include ./$(DEPDIR)/ChannelManager.Po
include ./$(DEPDIR)/Configuration.Po
include ./$(DEPDIR)/DistackInfo.Po
include ./$(DEPDIR)/DynamicLibrary.Po
include ./$(DEPDIR)/EthernetPacket.Po
include ./$(DEPDIR)/FileLogOutputter.Po
include ./$(DEPDIR)/Frame.Po
include ./$(DEPDIR)/FrameBuffer.Po
include ./$(DEPDIR)/FrameDistribution.Po
include ./$(DEPDIR)/GenericRoutingTable.Po
include ./$(DEPDIR)/Helper.Po
include ./$(DEPDIR)/IcmpPacket.Po
include ./$(DEPDIR)/InterruptableSleeper.Po
include ./$(DEPDIR)/IpPacket.Po
include ./$(DEPDIR)/Ipv6Packet.Po
include ./$(DEPDIR)/Log.Po
include ./$(DEPDIR)/LogLevel.Po
include ./$(DEPDIR)/LogOutputter.Po
include ./$(DEPDIR)/Message.Po
include ./$(DEPDIR)/MessagingNode.Po
include ./$(DEPDIR)/MessagingSystem.Po
include ./$(DEPDIR)/Module.Po
include ./$(DEPDIR)/ModuleManager.Po
include ./$(DEPDIR)/MplsPacket.Po
include ./$(DEPDIR)/NetworkInterface.Po
include ./$(DEPDIR)/NetworkInterfaceOmnetpp.Po
include ./$(DEPDIR)/NetworkInterfacePcap.Po
include ./$(DEPDIR)/NetworkManager.Po
include ./$(DEPDIR)/Packet.Po
include ./$(DEPDIR)/PacketFactory.Po
include ./$(DEPDIR)/PatriciaTrie.Po
include ./$(DEPDIR)/PayloadPacket.Po
include ./$(DEPDIR)/ProtocolNameResolver.Po
include ./$(DEPDIR)/RemoteCommSystem.Po
include ./$(DEPDIR)/RemoteCommSystemGist.Po
include ./$(DEPDIR)/RemoteCommSystemNone.Po
include ./$(DEPDIR)/RemoteCommSystemOmnetPathbased.Po
include ./$(DEPDIR)/RemoteCommSystemOmnetRing.Po
include ./$(DEPDIR)/RemoteCommSystemOmnetTcp.Po
include ./$(DEPDIR)/RemoteCommSystemTcpSocket.Po
include ./$(DEPDIR)/RemoteMessagingSystem.Po
include ./$(DEPDIR)/StdOutLogOutputter.Po
include ./$(DEPDIR)/SubnetCounterTree.Po
include ./$(DEPDIR)/TcpPacket.Po
include ./$(DEPDIR)/Timer.Po
include ./$(DEPDIR)/UdpPacket.Po
include ./$(DEPDIR)/triggerconf.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

DistackInfo.o: common/DistackInfo.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DistackInfo.o -MD -MP -MF $(DEPDIR)/DistackInfo.Tpo -c -o DistackInfo.o `test -f 'common/DistackInfo.cpp' || echo '$(srcdir)/'`common/DistackInfo.cpp
	$(am__mv) $(DEPDIR)/DistackInfo.Tpo $(DEPDIR)/DistackInfo.Po
#	source='common/DistackInfo.cpp' object='DistackInfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DistackInfo.o `test -f 'common/DistackInfo.cpp' || echo '$(srcdir)/'`common/DistackInfo.cpp

DistackInfo.obj: common/DistackInfo.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DistackInfo.obj -MD -MP -MF $(DEPDIR)/DistackInfo.Tpo -c -o DistackInfo.obj `if test -f 'common/DistackInfo.cpp'; then $(CYGPATH_W) 'common/DistackInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/common/DistackInfo.cpp'; fi`
	$(am__mv) $(DEPDIR)/DistackInfo.Tpo $(DEPDIR)/DistackInfo.Po
#	source='common/DistackInfo.cpp' object='DistackInfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DistackInfo.obj `if test -f 'common/DistackInfo.cpp'; then $(CYGPATH_W) 'common/DistackInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/common/DistackInfo.cpp'; fi`

Helper.o: common/Helper.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Helper.o -MD -MP -MF $(DEPDIR)/Helper.Tpo -c -o Helper.o `test -f 'common/Helper.cpp' || echo '$(srcdir)/'`common/Helper.cpp
	$(am__mv) $(DEPDIR)/Helper.Tpo $(DEPDIR)/Helper.Po
#	source='common/Helper.cpp' object='Helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Helper.o `test -f 'common/Helper.cpp' || echo '$(srcdir)/'`common/Helper.cpp

Helper.obj: common/Helper.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Helper.obj -MD -MP -MF $(DEPDIR)/Helper.Tpo -c -o Helper.obj `if test -f 'common/Helper.cpp'; then $(CYGPATH_W) 'common/Helper.cpp'; else $(CYGPATH_W) '$(srcdir)/common/Helper.cpp'; fi`
	$(am__mv) $(DEPDIR)/Helper.Tpo $(DEPDIR)/Helper.Po
#	source='common/Helper.cpp' object='Helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Helper.obj `if test -f 'common/Helper.cpp'; then $(CYGPATH_W) 'common/Helper.cpp'; else $(CYGPATH_W) '$(srcdir)/common/Helper.cpp'; fi`

InterruptableSleeper.o: common/InterruptableSleeper.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InterruptableSleeper.o -MD -MP -MF $(DEPDIR)/InterruptableSleeper.Tpo -c -o InterruptableSleeper.o `test -f 'common/InterruptableSleeper.cpp' || echo '$(srcdir)/'`common/InterruptableSleeper.cpp
	$(am__mv) $(DEPDIR)/InterruptableSleeper.Tpo $(DEPDIR)/InterruptableSleeper.Po
#	source='common/InterruptableSleeper.cpp' object='InterruptableSleeper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InterruptableSleeper.o `test -f 'common/InterruptableSleeper.cpp' || echo '$(srcdir)/'`common/InterruptableSleeper.cpp

InterruptableSleeper.obj: common/InterruptableSleeper.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InterruptableSleeper.obj -MD -MP -MF $(DEPDIR)/InterruptableSleeper.Tpo -c -o InterruptableSleeper.obj `if test -f 'common/InterruptableSleeper.cpp'; then $(CYGPATH_W) 'common/InterruptableSleeper.cpp'; else $(CYGPATH_W) '$(srcdir)/common/InterruptableSleeper.cpp'; fi`
	$(am__mv) $(DEPDIR)/InterruptableSleeper.Tpo $(DEPDIR)/InterruptableSleeper.Po
#	source='common/InterruptableSleeper.cpp' object='InterruptableSleeper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InterruptableSleeper.obj `if test -f 'common/InterruptableSleeper.cpp'; then $(CYGPATH_W) 'common/InterruptableSleeper.cpp'; else $(CYGPATH_W) '$(srcdir)/common/InterruptableSleeper.cpp'; fi`

SubnetCounterTree.o: common/SubnetCounterTree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SubnetCounterTree.o -MD -MP -MF $(DEPDIR)/SubnetCounterTree.Tpo -c -o SubnetCounterTree.o `test -f 'common/SubnetCounterTree.cpp' || echo '$(srcdir)/'`common/SubnetCounterTree.cpp
	$(am__mv) $(DEPDIR)/SubnetCounterTree.Tpo $(DEPDIR)/SubnetCounterTree.Po
#	source='common/SubnetCounterTree.cpp' object='SubnetCounterTree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SubnetCounterTree.o `test -f 'common/SubnetCounterTree.cpp' || echo '$(srcdir)/'`common/SubnetCounterTree.cpp

SubnetCounterTree.obj: common/SubnetCounterTree.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SubnetCounterTree.obj -MD -MP -MF $(DEPDIR)/SubnetCounterTree.Tpo -c -o SubnetCounterTree.obj `if test -f 'common/SubnetCounterTree.cpp'; then $(CYGPATH_W) 'common/SubnetCounterTree.cpp'; else $(CYGPATH_W) '$(srcdir)/common/SubnetCounterTree.cpp'; fi`
	$(am__mv) $(DEPDIR)/SubnetCounterTree.Tpo $(DEPDIR)/SubnetCounterTree.Po
#	source='common/SubnetCounterTree.cpp' object='SubnetCounterTree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SubnetCounterTree.obj `if test -f 'common/SubnetCounterTree.cpp'; then $(CYGPATH_W) 'common/SubnetCounterTree.cpp'; else $(CYGPATH_W) '$(srcdir)/common/SubnetCounterTree.cpp'; fi`

PatriciaTrie.o: common/PatriciaTrie.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PatriciaTrie.o -MD -MP -MF $(DEPDIR)/PatriciaTrie.Tpo -c -o PatriciaTrie.o `test -f 'common/PatriciaTrie.cpp' || echo '$(srcdir)/'`common/PatriciaTrie.cpp
	$(am__mv) $(DEPDIR)/PatriciaTrie.Tpo $(DEPDIR)/PatriciaTrie.Po
#	source='common/PatriciaTrie.cpp' object='PatriciaTrie.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PatriciaTrie.o `test -f 'common/PatriciaTrie.cpp' || echo '$(srcdir)/'`common/PatriciaTrie.cpp

PatriciaTrie.obj: common/PatriciaTrie.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PatriciaTrie.obj -MD -MP -MF $(DEPDIR)/PatriciaTrie.Tpo -c -o PatriciaTrie.obj `if test -f 'common/PatriciaTrie.cpp'; then $(CYGPATH_W) 'common/PatriciaTrie.cpp'; else $(CYGPATH_W) '$(srcdir)/common/PatriciaTrie.cpp'; fi`
	$(am__mv) $(DEPDIR)/PatriciaTrie.Tpo $(DEPDIR)/PatriciaTrie.Po
#	source='common/PatriciaTrie.cpp' object='PatriciaTrie.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PatriciaTrie.obj `if test -f 'common/PatriciaTrie.cpp'; then $(CYGPATH_W) 'common/PatriciaTrie.cpp'; else $(CYGPATH_W) '$(srcdir)/common/PatriciaTrie.cpp'; fi`

Timer.o: common/Timer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Timer.o -MD -MP -MF $(DEPDIR)/Timer.Tpo -c -o Timer.o `test -f 'common/Timer.cpp' || echo '$(srcdir)/'`common/Timer.cpp
	$(am__mv) $(DEPDIR)/Timer.Tpo $(DEPDIR)/Timer.Po
#	source='common/Timer.cpp' object='Timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Timer.o `test -f 'common/Timer.cpp' || echo '$(srcdir)/'`common/Timer.cpp

Timer.obj: common/Timer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Timer.obj -MD -MP -MF $(DEPDIR)/Timer.Tpo -c -o Timer.obj `if test -f 'common/Timer.cpp'; then $(CYGPATH_W) 'common/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/common/Timer.cpp'; fi`
	$(am__mv) $(DEPDIR)/Timer.Tpo $(DEPDIR)/Timer.Po
#	source='common/Timer.cpp' object='Timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Timer.obj `if test -f 'common/Timer.cpp'; then $(CYGPATH_W) 'common/Timer.cpp'; else $(CYGPATH_W) '$(srcdir)/common/Timer.cpp'; fi`

FileLogOutputter.o: common/FileLogOutputter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FileLogOutputter.o -MD -MP -MF $(DEPDIR)/FileLogOutputter.Tpo -c -o FileLogOutputter.o `test -f 'common/FileLogOutputter.cpp' || echo '$(srcdir)/'`common/FileLogOutputter.cpp
	$(am__mv) $(DEPDIR)/FileLogOutputter.Tpo $(DEPDIR)/FileLogOutputter.Po
#	source='common/FileLogOutputter.cpp' object='FileLogOutputter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FileLogOutputter.o `test -f 'common/FileLogOutputter.cpp' || echo '$(srcdir)/'`common/FileLogOutputter.cpp

FileLogOutputter.obj: common/FileLogOutputter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FileLogOutputter.obj -MD -MP -MF $(DEPDIR)/FileLogOutputter.Tpo -c -o FileLogOutputter.obj `if test -f 'common/FileLogOutputter.cpp'; then $(CYGPATH_W) 'common/FileLogOutputter.cpp'; else $(CYGPATH_W) '$(srcdir)/common/FileLogOutputter.cpp'; fi`
	$(am__mv) $(DEPDIR)/FileLogOutputter.Tpo $(DEPDIR)/FileLogOutputter.Po
#	source='common/FileLogOutputter.cpp' object='FileLogOutputter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FileLogOutputter.obj `if test -f 'common/FileLogOutputter.cpp'; then $(CYGPATH_W) 'common/FileLogOutputter.cpp'; else $(CYGPATH_W) '$(srcdir)/common/FileLogOutputter.cpp'; fi`

Log.o: common/Log.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Log.o -MD -MP -MF $(DEPDIR)/Log.Tpo -c -o Log.o `test -f 'common/Log.cpp' || echo '$(srcdir)/'`common/Log.cpp
	$(am__mv) $(DEPDIR)/Log.Tpo $(DEPDIR)/Log.Po
#	source='common/Log.cpp' object='Log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Log.o `test -f 'common/Log.cpp' || echo '$(srcdir)/'`common/Log.cpp

Log.obj: common/Log.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Log.obj -MD -MP -MF $(DEPDIR)/Log.Tpo -c -o Log.obj `if test -f 'common/Log.cpp'; then $(CYGPATH_W) 'common/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/common/Log.cpp'; fi`
	$(am__mv) $(DEPDIR)/Log.Tpo $(DEPDIR)/Log.Po
#	source='common/Log.cpp' object='Log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Log.obj `if test -f 'common/Log.cpp'; then $(CYGPATH_W) 'common/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/common/Log.cpp'; fi`

LogLevel.o: common/LogLevel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LogLevel.o -MD -MP -MF $(DEPDIR)/LogLevel.Tpo -c -o LogLevel.o `test -f 'common/LogLevel.cpp' || echo '$(srcdir)/'`common/LogLevel.cpp
	$(am__mv) $(DEPDIR)/LogLevel.Tpo $(DEPDIR)/LogLevel.Po
#	source='common/LogLevel.cpp' object='LogLevel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LogLevel.o `test -f 'common/LogLevel.cpp' || echo '$(srcdir)/'`common/LogLevel.cpp

LogLevel.obj: common/LogLevel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LogLevel.obj -MD -MP -MF $(DEPDIR)/LogLevel.Tpo -c -o LogLevel.obj `if test -f 'common/LogLevel.cpp'; then $(CYGPATH_W) 'common/LogLevel.cpp'; else $(CYGPATH_W) '$(srcdir)/common/LogLevel.cpp'; fi`
	$(am__mv) $(DEPDIR)/LogLevel.Tpo $(DEPDIR)/LogLevel.Po
#	source='common/LogLevel.cpp' object='LogLevel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LogLevel.obj `if test -f 'common/LogLevel.cpp'; then $(CYGPATH_W) 'common/LogLevel.cpp'; else $(CYGPATH_W) '$(srcdir)/common/LogLevel.cpp'; fi`

LogOutputter.o: common/LogOutputter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LogOutputter.o -MD -MP -MF $(DEPDIR)/LogOutputter.Tpo -c -o LogOutputter.o `test -f 'common/LogOutputter.cpp' || echo '$(srcdir)/'`common/LogOutputter.cpp
	$(am__mv) $(DEPDIR)/LogOutputter.Tpo $(DEPDIR)/LogOutputter.Po
#	source='common/LogOutputter.cpp' object='LogOutputter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LogOutputter.o `test -f 'common/LogOutputter.cpp' || echo '$(srcdir)/'`common/LogOutputter.cpp

LogOutputter.obj: common/LogOutputter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LogOutputter.obj -MD -MP -MF $(DEPDIR)/LogOutputter.Tpo -c -o LogOutputter.obj `if test -f 'common/LogOutputter.cpp'; then $(CYGPATH_W) 'common/LogOutputter.cpp'; else $(CYGPATH_W) '$(srcdir)/common/LogOutputter.cpp'; fi`
	$(am__mv) $(DEPDIR)/LogOutputter.Tpo $(DEPDIR)/LogOutputter.Po
#	source='common/LogOutputter.cpp' object='LogOutputter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LogOutputter.obj `if test -f 'common/LogOutputter.cpp'; then $(CYGPATH_W) 'common/LogOutputter.cpp'; else $(CYGPATH_W) '$(srcdir)/common/LogOutputter.cpp'; fi`

StdOutLogOutputter.o: common/StdOutLogOutputter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StdOutLogOutputter.o -MD -MP -MF $(DEPDIR)/StdOutLogOutputter.Tpo -c -o StdOutLogOutputter.o `test -f 'common/StdOutLogOutputter.cpp' || echo '$(srcdir)/'`common/StdOutLogOutputter.cpp
	$(am__mv) $(DEPDIR)/StdOutLogOutputter.Tpo $(DEPDIR)/StdOutLogOutputter.Po
#	source='common/StdOutLogOutputter.cpp' object='StdOutLogOutputter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StdOutLogOutputter.o `test -f 'common/StdOutLogOutputter.cpp' || echo '$(srcdir)/'`common/StdOutLogOutputter.cpp

StdOutLogOutputter.obj: common/StdOutLogOutputter.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StdOutLogOutputter.obj -MD -MP -MF $(DEPDIR)/StdOutLogOutputter.Tpo -c -o StdOutLogOutputter.obj `if test -f 'common/StdOutLogOutputter.cpp'; then $(CYGPATH_W) 'common/StdOutLogOutputter.cpp'; else $(CYGPATH_W) '$(srcdir)/common/StdOutLogOutputter.cpp'; fi`
	$(am__mv) $(DEPDIR)/StdOutLogOutputter.Tpo $(DEPDIR)/StdOutLogOutputter.Po
#	source='common/StdOutLogOutputter.cpp' object='StdOutLogOutputter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StdOutLogOutputter.obj `if test -f 'common/StdOutLogOutputter.cpp'; then $(CYGPATH_W) 'common/StdOutLogOutputter.cpp'; else $(CYGPATH_W) '$(srcdir)/common/StdOutLogOutputter.cpp'; fi`

GenericRoutingTable.o: common/GenericRoutingTable.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GenericRoutingTable.o -MD -MP -MF $(DEPDIR)/GenericRoutingTable.Tpo -c -o GenericRoutingTable.o `test -f 'common/GenericRoutingTable.cpp' || echo '$(srcdir)/'`common/GenericRoutingTable.cpp
	$(am__mv) $(DEPDIR)/GenericRoutingTable.Tpo $(DEPDIR)/GenericRoutingTable.Po
#	source='common/GenericRoutingTable.cpp' object='GenericRoutingTable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GenericRoutingTable.o `test -f 'common/GenericRoutingTable.cpp' || echo '$(srcdir)/'`common/GenericRoutingTable.cpp

GenericRoutingTable.obj: common/GenericRoutingTable.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GenericRoutingTable.obj -MD -MP -MF $(DEPDIR)/GenericRoutingTable.Tpo -c -o GenericRoutingTable.obj `if test -f 'common/GenericRoutingTable.cpp'; then $(CYGPATH_W) 'common/GenericRoutingTable.cpp'; else $(CYGPATH_W) '$(srcdir)/common/GenericRoutingTable.cpp'; fi`
	$(am__mv) $(DEPDIR)/GenericRoutingTable.Tpo $(DEPDIR)/GenericRoutingTable.Po
#	source='common/GenericRoutingTable.cpp' object='GenericRoutingTable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GenericRoutingTable.obj `if test -f 'common/GenericRoutingTable.cpp'; then $(CYGPATH_W) 'common/GenericRoutingTable.cpp'; else $(CYGPATH_W) '$(srcdir)/common/GenericRoutingTable.cpp'; fi`

Configuration.o: configuration/Configuration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Configuration.o -MD -MP -MF $(DEPDIR)/Configuration.Tpo -c -o Configuration.o `test -f 'configuration/Configuration.cpp' || echo '$(srcdir)/'`configuration/Configuration.cpp
	$(am__mv) $(DEPDIR)/Configuration.Tpo $(DEPDIR)/Configuration.Po
#	source='configuration/Configuration.cpp' object='Configuration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Configuration.o `test -f 'configuration/Configuration.cpp' || echo '$(srcdir)/'`configuration/Configuration.cpp

Configuration.obj: configuration/Configuration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Configuration.obj -MD -MP -MF $(DEPDIR)/Configuration.Tpo -c -o Configuration.obj `if test -f 'configuration/Configuration.cpp'; then $(CYGPATH_W) 'configuration/Configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/configuration/Configuration.cpp'; fi`
	$(am__mv) $(DEPDIR)/Configuration.Tpo $(DEPDIR)/Configuration.Po
#	source='configuration/Configuration.cpp' object='Configuration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Configuration.obj `if test -f 'configuration/Configuration.cpp'; then $(CYGPATH_W) 'configuration/Configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/configuration/Configuration.cpp'; fi`

triggerconf.o: configuration/triggerconf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT triggerconf.o -MD -MP -MF $(DEPDIR)/triggerconf.Tpo -c -o triggerconf.o `test -f 'configuration/triggerconf.cpp' || echo '$(srcdir)/'`configuration/triggerconf.cpp
	$(am__mv) $(DEPDIR)/triggerconf.Tpo $(DEPDIR)/triggerconf.Po
#	source='configuration/triggerconf.cpp' object='triggerconf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o triggerconf.o `test -f 'configuration/triggerconf.cpp' || echo '$(srcdir)/'`configuration/triggerconf.cpp

triggerconf.obj: configuration/triggerconf.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT triggerconf.obj -MD -MP -MF $(DEPDIR)/triggerconf.Tpo -c -o triggerconf.obj `if test -f 'configuration/triggerconf.cpp'; then $(CYGPATH_W) 'configuration/triggerconf.cpp'; else $(CYGPATH_W) '$(srcdir)/configuration/triggerconf.cpp'; fi`
	$(am__mv) $(DEPDIR)/triggerconf.Tpo $(DEPDIR)/triggerconf.Po
#	source='configuration/triggerconf.cpp' object='triggerconf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o triggerconf.obj `if test -f 'configuration/triggerconf.cpp'; then $(CYGPATH_W) 'configuration/triggerconf.cpp'; else $(CYGPATH_W) '$(srcdir)/configuration/triggerconf.cpp'; fi`

Message.o: message/Message.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Message.o -MD -MP -MF $(DEPDIR)/Message.Tpo -c -o Message.o `test -f 'message/Message.cpp' || echo '$(srcdir)/'`message/Message.cpp
	$(am__mv) $(DEPDIR)/Message.Tpo $(DEPDIR)/Message.Po
#	source='message/Message.cpp' object='Message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Message.o `test -f 'message/Message.cpp' || echo '$(srcdir)/'`message/Message.cpp

Message.obj: message/Message.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Message.obj -MD -MP -MF $(DEPDIR)/Message.Tpo -c -o Message.obj `if test -f 'message/Message.cpp'; then $(CYGPATH_W) 'message/Message.cpp'; else $(CYGPATH_W) '$(srcdir)/message/Message.cpp'; fi`
	$(am__mv) $(DEPDIR)/Message.Tpo $(DEPDIR)/Message.Po
#	source='message/Message.cpp' object='Message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Message.obj `if test -f 'message/Message.cpp'; then $(CYGPATH_W) 'message/Message.cpp'; else $(CYGPATH_W) '$(srcdir)/message/Message.cpp'; fi`

MessagingNode.o: message/MessagingNode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MessagingNode.o -MD -MP -MF $(DEPDIR)/MessagingNode.Tpo -c -o MessagingNode.o `test -f 'message/MessagingNode.cpp' || echo '$(srcdir)/'`message/MessagingNode.cpp
	$(am__mv) $(DEPDIR)/MessagingNode.Tpo $(DEPDIR)/MessagingNode.Po
#	source='message/MessagingNode.cpp' object='MessagingNode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MessagingNode.o `test -f 'message/MessagingNode.cpp' || echo '$(srcdir)/'`message/MessagingNode.cpp

MessagingNode.obj: message/MessagingNode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MessagingNode.obj -MD -MP -MF $(DEPDIR)/MessagingNode.Tpo -c -o MessagingNode.obj `if test -f 'message/MessagingNode.cpp'; then $(CYGPATH_W) 'message/MessagingNode.cpp'; else $(CYGPATH_W) '$(srcdir)/message/MessagingNode.cpp'; fi`
	$(am__mv) $(DEPDIR)/MessagingNode.Tpo $(DEPDIR)/MessagingNode.Po
#	source='message/MessagingNode.cpp' object='MessagingNode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MessagingNode.obj `if test -f 'message/MessagingNode.cpp'; then $(CYGPATH_W) 'message/MessagingNode.cpp'; else $(CYGPATH_W) '$(srcdir)/message/MessagingNode.cpp'; fi`

MessagingSystem.o: message/MessagingSystem.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MessagingSystem.o -MD -MP -MF $(DEPDIR)/MessagingSystem.Tpo -c -o MessagingSystem.o `test -f 'message/MessagingSystem.cpp' || echo '$(srcdir)/'`message/MessagingSystem.cpp
	$(am__mv) $(DEPDIR)/MessagingSystem.Tpo $(DEPDIR)/MessagingSystem.Po
#	source='message/MessagingSystem.cpp' object='MessagingSystem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MessagingSystem.o `test -f 'message/MessagingSystem.cpp' || echo '$(srcdir)/'`message/MessagingSystem.cpp

MessagingSystem.obj: message/MessagingSystem.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MessagingSystem.obj -MD -MP -MF $(DEPDIR)/MessagingSystem.Tpo -c -o MessagingSystem.obj `if test -f 'message/MessagingSystem.cpp'; then $(CYGPATH_W) 'message/MessagingSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/message/MessagingSystem.cpp'; fi`
	$(am__mv) $(DEPDIR)/MessagingSystem.Tpo $(DEPDIR)/MessagingSystem.Po
#	source='message/MessagingSystem.cpp' object='MessagingSystem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MessagingSystem.obj `if test -f 'message/MessagingSystem.cpp'; then $(CYGPATH_W) 'message/MessagingSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/message/MessagingSystem.cpp'; fi`

RemoteMessagingSystem.o: message/remote/RemoteMessagingSystem.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteMessagingSystem.o -MD -MP -MF $(DEPDIR)/RemoteMessagingSystem.Tpo -c -o RemoteMessagingSystem.o `test -f 'message/remote/RemoteMessagingSystem.cpp' || echo '$(srcdir)/'`message/remote/RemoteMessagingSystem.cpp
	$(am__mv) $(DEPDIR)/RemoteMessagingSystem.Tpo $(DEPDIR)/RemoteMessagingSystem.Po
#	source='message/remote/RemoteMessagingSystem.cpp' object='RemoteMessagingSystem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteMessagingSystem.o `test -f 'message/remote/RemoteMessagingSystem.cpp' || echo '$(srcdir)/'`message/remote/RemoteMessagingSystem.cpp

RemoteMessagingSystem.obj: message/remote/RemoteMessagingSystem.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteMessagingSystem.obj -MD -MP -MF $(DEPDIR)/RemoteMessagingSystem.Tpo -c -o RemoteMessagingSystem.obj `if test -f 'message/remote/RemoteMessagingSystem.cpp'; then $(CYGPATH_W) 'message/remote/RemoteMessagingSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteMessagingSystem.cpp'; fi`
	$(am__mv) $(DEPDIR)/RemoteMessagingSystem.Tpo $(DEPDIR)/RemoteMessagingSystem.Po
#	source='message/remote/RemoteMessagingSystem.cpp' object='RemoteMessagingSystem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteMessagingSystem.obj `if test -f 'message/remote/RemoteMessagingSystem.cpp'; then $(CYGPATH_W) 'message/remote/RemoteMessagingSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteMessagingSystem.cpp'; fi`

RemoteCommSystem.o: message/remote/RemoteCommSystem.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystem.o -MD -MP -MF $(DEPDIR)/RemoteCommSystem.Tpo -c -o RemoteCommSystem.o `test -f 'message/remote/RemoteCommSystem.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystem.cpp
	$(am__mv) $(DEPDIR)/RemoteCommSystem.Tpo $(DEPDIR)/RemoteCommSystem.Po
#	source='message/remote/RemoteCommSystem.cpp' object='RemoteCommSystem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystem.o `test -f 'message/remote/RemoteCommSystem.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystem.cpp

RemoteCommSystem.obj: message/remote/RemoteCommSystem.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystem.obj -MD -MP -MF $(DEPDIR)/RemoteCommSystem.Tpo -c -o RemoteCommSystem.obj `if test -f 'message/remote/RemoteCommSystem.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystem.cpp'; fi`
	$(am__mv) $(DEPDIR)/RemoteCommSystem.Tpo $(DEPDIR)/RemoteCommSystem.Po
#	source='message/remote/RemoteCommSystem.cpp' object='RemoteCommSystem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystem.obj `if test -f 'message/remote/RemoteCommSystem.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystem.cpp'; fi`

RemoteCommSystemNone.o: message/remote/RemoteCommSystemNone.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemNone.o -MD -MP -MF $(DEPDIR)/RemoteCommSystemNone.Tpo -c -o RemoteCommSystemNone.o `test -f 'message/remote/RemoteCommSystemNone.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemNone.cpp
	$(am__mv) $(DEPDIR)/RemoteCommSystemNone.Tpo $(DEPDIR)/RemoteCommSystemNone.Po
#	source='message/remote/RemoteCommSystemNone.cpp' object='RemoteCommSystemNone.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemNone.o `test -f 'message/remote/RemoteCommSystemNone.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemNone.cpp

RemoteCommSystemNone.obj: message/remote/RemoteCommSystemNone.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemNone.obj -MD -MP -MF $(DEPDIR)/RemoteCommSystemNone.Tpo -c -o RemoteCommSystemNone.obj `if test -f 'message/remote/RemoteCommSystemNone.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemNone.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemNone.cpp'; fi`
	$(am__mv) $(DEPDIR)/RemoteCommSystemNone.Tpo $(DEPDIR)/RemoteCommSystemNone.Po
#	source='message/remote/RemoteCommSystemNone.cpp' object='RemoteCommSystemNone.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemNone.obj `if test -f 'message/remote/RemoteCommSystemNone.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemNone.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemNone.cpp'; fi`

RemoteCommSystemOmnetPathbased.o: message/remote/RemoteCommSystemOmnetPathbased.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemOmnetPathbased.o -MD -MP -MF $(DEPDIR)/RemoteCommSystemOmnetPathbased.Tpo -c -o RemoteCommSystemOmnetPathbased.o `test -f 'message/remote/RemoteCommSystemOmnetPathbased.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemOmnetPathbased.cpp
	$(am__mv) $(DEPDIR)/RemoteCommSystemOmnetPathbased.Tpo $(DEPDIR)/RemoteCommSystemOmnetPathbased.Po
#	source='message/remote/RemoteCommSystemOmnetPathbased.cpp' object='RemoteCommSystemOmnetPathbased.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemOmnetPathbased.o `test -f 'message/remote/RemoteCommSystemOmnetPathbased.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemOmnetPathbased.cpp

RemoteCommSystemOmnetPathbased.obj: message/remote/RemoteCommSystemOmnetPathbased.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemOmnetPathbased.obj -MD -MP -MF $(DEPDIR)/RemoteCommSystemOmnetPathbased.Tpo -c -o RemoteCommSystemOmnetPathbased.obj `if test -f 'message/remote/RemoteCommSystemOmnetPathbased.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemOmnetPathbased.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemOmnetPathbased.cpp'; fi`
	$(am__mv) $(DEPDIR)/RemoteCommSystemOmnetPathbased.Tpo $(DEPDIR)/RemoteCommSystemOmnetPathbased.Po
#	source='message/remote/RemoteCommSystemOmnetPathbased.cpp' object='RemoteCommSystemOmnetPathbased.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemOmnetPathbased.obj `if test -f 'message/remote/RemoteCommSystemOmnetPathbased.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemOmnetPathbased.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemOmnetPathbased.cpp'; fi`

RemoteCommSystemOmnetRing.o: message/remote/RemoteCommSystemOmnetRing.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemOmnetRing.o -MD -MP -MF $(DEPDIR)/RemoteCommSystemOmnetRing.Tpo -c -o RemoteCommSystemOmnetRing.o `test -f 'message/remote/RemoteCommSystemOmnetRing.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemOmnetRing.cpp
	$(am__mv) $(DEPDIR)/RemoteCommSystemOmnetRing.Tpo $(DEPDIR)/RemoteCommSystemOmnetRing.Po
#	source='message/remote/RemoteCommSystemOmnetRing.cpp' object='RemoteCommSystemOmnetRing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemOmnetRing.o `test -f 'message/remote/RemoteCommSystemOmnetRing.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemOmnetRing.cpp

RemoteCommSystemOmnetRing.obj: message/remote/RemoteCommSystemOmnetRing.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemOmnetRing.obj -MD -MP -MF $(DEPDIR)/RemoteCommSystemOmnetRing.Tpo -c -o RemoteCommSystemOmnetRing.obj `if test -f 'message/remote/RemoteCommSystemOmnetRing.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemOmnetRing.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemOmnetRing.cpp'; fi`
	$(am__mv) $(DEPDIR)/RemoteCommSystemOmnetRing.Tpo $(DEPDIR)/RemoteCommSystemOmnetRing.Po
#	source='message/remote/RemoteCommSystemOmnetRing.cpp' object='RemoteCommSystemOmnetRing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemOmnetRing.obj `if test -f 'message/remote/RemoteCommSystemOmnetRing.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemOmnetRing.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemOmnetRing.cpp'; fi`

RemoteCommSystemOmnetTcp.o: message/remote/RemoteCommSystemOmnetTcp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemOmnetTcp.o -MD -MP -MF $(DEPDIR)/RemoteCommSystemOmnetTcp.Tpo -c -o RemoteCommSystemOmnetTcp.o `test -f 'message/remote/RemoteCommSystemOmnetTcp.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemOmnetTcp.cpp
	$(am__mv) $(DEPDIR)/RemoteCommSystemOmnetTcp.Tpo $(DEPDIR)/RemoteCommSystemOmnetTcp.Po
#	source='message/remote/RemoteCommSystemOmnetTcp.cpp' object='RemoteCommSystemOmnetTcp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemOmnetTcp.o `test -f 'message/remote/RemoteCommSystemOmnetTcp.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemOmnetTcp.cpp

RemoteCommSystemOmnetTcp.obj: message/remote/RemoteCommSystemOmnetTcp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemOmnetTcp.obj -MD -MP -MF $(DEPDIR)/RemoteCommSystemOmnetTcp.Tpo -c -o RemoteCommSystemOmnetTcp.obj `if test -f 'message/remote/RemoteCommSystemOmnetTcp.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemOmnetTcp.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemOmnetTcp.cpp'; fi`
	$(am__mv) $(DEPDIR)/RemoteCommSystemOmnetTcp.Tpo $(DEPDIR)/RemoteCommSystemOmnetTcp.Po
#	source='message/remote/RemoteCommSystemOmnetTcp.cpp' object='RemoteCommSystemOmnetTcp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemOmnetTcp.obj `if test -f 'message/remote/RemoteCommSystemOmnetTcp.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemOmnetTcp.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemOmnetTcp.cpp'; fi`

RemoteCommSystemTcpSocket.o: message/remote/RemoteCommSystemTcpSocket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemTcpSocket.o -MD -MP -MF $(DEPDIR)/RemoteCommSystemTcpSocket.Tpo -c -o RemoteCommSystemTcpSocket.o `test -f 'message/remote/RemoteCommSystemTcpSocket.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemTcpSocket.cpp
	$(am__mv) $(DEPDIR)/RemoteCommSystemTcpSocket.Tpo $(DEPDIR)/RemoteCommSystemTcpSocket.Po
#	source='message/remote/RemoteCommSystemTcpSocket.cpp' object='RemoteCommSystemTcpSocket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemTcpSocket.o `test -f 'message/remote/RemoteCommSystemTcpSocket.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemTcpSocket.cpp

RemoteCommSystemTcpSocket.obj: message/remote/RemoteCommSystemTcpSocket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemTcpSocket.obj -MD -MP -MF $(DEPDIR)/RemoteCommSystemTcpSocket.Tpo -c -o RemoteCommSystemTcpSocket.obj `if test -f 'message/remote/RemoteCommSystemTcpSocket.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemTcpSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemTcpSocket.cpp'; fi`
	$(am__mv) $(DEPDIR)/RemoteCommSystemTcpSocket.Tpo $(DEPDIR)/RemoteCommSystemTcpSocket.Po
#	source='message/remote/RemoteCommSystemTcpSocket.cpp' object='RemoteCommSystemTcpSocket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemTcpSocket.obj `if test -f 'message/remote/RemoteCommSystemTcpSocket.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemTcpSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemTcpSocket.cpp'; fi`

RemoteCommSystemGist.o: message/remote/RemoteCommSystemGist.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemGist.o -MD -MP -MF $(DEPDIR)/RemoteCommSystemGist.Tpo -c -o RemoteCommSystemGist.o `test -f 'message/remote/RemoteCommSystemGist.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemGist.cpp
	$(am__mv) $(DEPDIR)/RemoteCommSystemGist.Tpo $(DEPDIR)/RemoteCommSystemGist.Po
#	source='message/remote/RemoteCommSystemGist.cpp' object='RemoteCommSystemGist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemGist.o `test -f 'message/remote/RemoteCommSystemGist.cpp' || echo '$(srcdir)/'`message/remote/RemoteCommSystemGist.cpp

RemoteCommSystemGist.obj: message/remote/RemoteCommSystemGist.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RemoteCommSystemGist.obj -MD -MP -MF $(DEPDIR)/RemoteCommSystemGist.Tpo -c -o RemoteCommSystemGist.obj `if test -f 'message/remote/RemoteCommSystemGist.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemGist.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemGist.cpp'; fi`
	$(am__mv) $(DEPDIR)/RemoteCommSystemGist.Tpo $(DEPDIR)/RemoteCommSystemGist.Po
#	source='message/remote/RemoteCommSystemGist.cpp' object='RemoteCommSystemGist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RemoteCommSystemGist.obj `if test -f 'message/remote/RemoteCommSystemGist.cpp'; then $(CYGPATH_W) 'message/remote/RemoteCommSystemGist.cpp'; else $(CYGPATH_W) '$(srcdir)/message/remote/RemoteCommSystemGist.cpp'; fi`

Channel.o: module/Channel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Channel.o -MD -MP -MF $(DEPDIR)/Channel.Tpo -c -o Channel.o `test -f 'module/Channel.cpp' || echo '$(srcdir)/'`module/Channel.cpp
	$(am__mv) $(DEPDIR)/Channel.Tpo $(DEPDIR)/Channel.Po
#	source='module/Channel.cpp' object='Channel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Channel.o `test -f 'module/Channel.cpp' || echo '$(srcdir)/'`module/Channel.cpp

Channel.obj: module/Channel.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Channel.obj -MD -MP -MF $(DEPDIR)/Channel.Tpo -c -o Channel.obj `if test -f 'module/Channel.cpp'; then $(CYGPATH_W) 'module/Channel.cpp'; else $(CYGPATH_W) '$(srcdir)/module/Channel.cpp'; fi`
	$(am__mv) $(DEPDIR)/Channel.Tpo $(DEPDIR)/Channel.Po
#	source='module/Channel.cpp' object='Channel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Channel.obj `if test -f 'module/Channel.cpp'; then $(CYGPATH_W) 'module/Channel.cpp'; else $(CYGPATH_W) '$(srcdir)/module/Channel.cpp'; fi`

ChannelManager.o: module/ChannelManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ChannelManager.o -MD -MP -MF $(DEPDIR)/ChannelManager.Tpo -c -o ChannelManager.o `test -f 'module/ChannelManager.cpp' || echo '$(srcdir)/'`module/ChannelManager.cpp
	$(am__mv) $(DEPDIR)/ChannelManager.Tpo $(DEPDIR)/ChannelManager.Po
#	source='module/ChannelManager.cpp' object='ChannelManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ChannelManager.o `test -f 'module/ChannelManager.cpp' || echo '$(srcdir)/'`module/ChannelManager.cpp

ChannelManager.obj: module/ChannelManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ChannelManager.obj -MD -MP -MF $(DEPDIR)/ChannelManager.Tpo -c -o ChannelManager.obj `if test -f 'module/ChannelManager.cpp'; then $(CYGPATH_W) 'module/ChannelManager.cpp'; else $(CYGPATH_W) '$(srcdir)/module/ChannelManager.cpp'; fi`
	$(am__mv) $(DEPDIR)/ChannelManager.Tpo $(DEPDIR)/ChannelManager.Po
#	source='module/ChannelManager.cpp' object='ChannelManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ChannelManager.obj `if test -f 'module/ChannelManager.cpp'; then $(CYGPATH_W) 'module/ChannelManager.cpp'; else $(CYGPATH_W) '$(srcdir)/module/ChannelManager.cpp'; fi`

DynamicLibrary.o: module/DynamicLibrary.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DynamicLibrary.o -MD -MP -MF $(DEPDIR)/DynamicLibrary.Tpo -c -o DynamicLibrary.o `test -f 'module/DynamicLibrary.cpp' || echo '$(srcdir)/'`module/DynamicLibrary.cpp
	$(am__mv) $(DEPDIR)/DynamicLibrary.Tpo $(DEPDIR)/DynamicLibrary.Po
#	source='module/DynamicLibrary.cpp' object='DynamicLibrary.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DynamicLibrary.o `test -f 'module/DynamicLibrary.cpp' || echo '$(srcdir)/'`module/DynamicLibrary.cpp

DynamicLibrary.obj: module/DynamicLibrary.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DynamicLibrary.obj -MD -MP -MF $(DEPDIR)/DynamicLibrary.Tpo -c -o DynamicLibrary.obj `if test -f 'module/DynamicLibrary.cpp'; then $(CYGPATH_W) 'module/DynamicLibrary.cpp'; else $(CYGPATH_W) '$(srcdir)/module/DynamicLibrary.cpp'; fi`
	$(am__mv) $(DEPDIR)/DynamicLibrary.Tpo $(DEPDIR)/DynamicLibrary.Po
#	source='module/DynamicLibrary.cpp' object='DynamicLibrary.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DynamicLibrary.obj `if test -f 'module/DynamicLibrary.cpp'; then $(CYGPATH_W) 'module/DynamicLibrary.cpp'; else $(CYGPATH_W) '$(srcdir)/module/DynamicLibrary.cpp'; fi`

FrameDistribution.o: module/FrameDistribution.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FrameDistribution.o -MD -MP -MF $(DEPDIR)/FrameDistribution.Tpo -c -o FrameDistribution.o `test -f 'module/FrameDistribution.cpp' || echo '$(srcdir)/'`module/FrameDistribution.cpp
	$(am__mv) $(DEPDIR)/FrameDistribution.Tpo $(DEPDIR)/FrameDistribution.Po
#	source='module/FrameDistribution.cpp' object='FrameDistribution.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FrameDistribution.o `test -f 'module/FrameDistribution.cpp' || echo '$(srcdir)/'`module/FrameDistribution.cpp

FrameDistribution.obj: module/FrameDistribution.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FrameDistribution.obj -MD -MP -MF $(DEPDIR)/FrameDistribution.Tpo -c -o FrameDistribution.obj `if test -f 'module/FrameDistribution.cpp'; then $(CYGPATH_W) 'module/FrameDistribution.cpp'; else $(CYGPATH_W) '$(srcdir)/module/FrameDistribution.cpp'; fi`
	$(am__mv) $(DEPDIR)/FrameDistribution.Tpo $(DEPDIR)/FrameDistribution.Po
#	source='module/FrameDistribution.cpp' object='FrameDistribution.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FrameDistribution.obj `if test -f 'module/FrameDistribution.cpp'; then $(CYGPATH_W) 'module/FrameDistribution.cpp'; else $(CYGPATH_W) '$(srcdir)/module/FrameDistribution.cpp'; fi`

Module.o: module/Module.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Module.o -MD -MP -MF $(DEPDIR)/Module.Tpo -c -o Module.o `test -f 'module/Module.cpp' || echo '$(srcdir)/'`module/Module.cpp
	$(am__mv) $(DEPDIR)/Module.Tpo $(DEPDIR)/Module.Po
#	source='module/Module.cpp' object='Module.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Module.o `test -f 'module/Module.cpp' || echo '$(srcdir)/'`module/Module.cpp

Module.obj: module/Module.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Module.obj -MD -MP -MF $(DEPDIR)/Module.Tpo -c -o Module.obj `if test -f 'module/Module.cpp'; then $(CYGPATH_W) 'module/Module.cpp'; else $(CYGPATH_W) '$(srcdir)/module/Module.cpp'; fi`
	$(am__mv) $(DEPDIR)/Module.Tpo $(DEPDIR)/Module.Po
#	source='module/Module.cpp' object='Module.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Module.obj `if test -f 'module/Module.cpp'; then $(CYGPATH_W) 'module/Module.cpp'; else $(CYGPATH_W) '$(srcdir)/module/Module.cpp'; fi`

ModuleManager.o: module/ModuleManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ModuleManager.o -MD -MP -MF $(DEPDIR)/ModuleManager.Tpo -c -o ModuleManager.o `test -f 'module/ModuleManager.cpp' || echo '$(srcdir)/'`module/ModuleManager.cpp
	$(am__mv) $(DEPDIR)/ModuleManager.Tpo $(DEPDIR)/ModuleManager.Po
#	source='module/ModuleManager.cpp' object='ModuleManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ModuleManager.o `test -f 'module/ModuleManager.cpp' || echo '$(srcdir)/'`module/ModuleManager.cpp

ModuleManager.obj: module/ModuleManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ModuleManager.obj -MD -MP -MF $(DEPDIR)/ModuleManager.Tpo -c -o ModuleManager.obj `if test -f 'module/ModuleManager.cpp'; then $(CYGPATH_W) 'module/ModuleManager.cpp'; else $(CYGPATH_W) '$(srcdir)/module/ModuleManager.cpp'; fi`
	$(am__mv) $(DEPDIR)/ModuleManager.Tpo $(DEPDIR)/ModuleManager.Po
#	source='module/ModuleManager.cpp' object='ModuleManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ModuleManager.obj `if test -f 'module/ModuleManager.cpp'; then $(CYGPATH_W) 'module/ModuleManager.cpp'; else $(CYGPATH_W) '$(srcdir)/module/ModuleManager.cpp'; fi`

ArpPacket.o: protocol/ArpPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ArpPacket.o -MD -MP -MF $(DEPDIR)/ArpPacket.Tpo -c -o ArpPacket.o `test -f 'protocol/ArpPacket.cpp' || echo '$(srcdir)/'`protocol/ArpPacket.cpp
	$(am__mv) $(DEPDIR)/ArpPacket.Tpo $(DEPDIR)/ArpPacket.Po
#	source='protocol/ArpPacket.cpp' object='ArpPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ArpPacket.o `test -f 'protocol/ArpPacket.cpp' || echo '$(srcdir)/'`protocol/ArpPacket.cpp

ArpPacket.obj: protocol/ArpPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ArpPacket.obj -MD -MP -MF $(DEPDIR)/ArpPacket.Tpo -c -o ArpPacket.obj `if test -f 'protocol/ArpPacket.cpp'; then $(CYGPATH_W) 'protocol/ArpPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/ArpPacket.cpp'; fi`
	$(am__mv) $(DEPDIR)/ArpPacket.Tpo $(DEPDIR)/ArpPacket.Po
#	source='protocol/ArpPacket.cpp' object='ArpPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ArpPacket.obj `if test -f 'protocol/ArpPacket.cpp'; then $(CYGPATH_W) 'protocol/ArpPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/ArpPacket.cpp'; fi`

EthernetPacket.o: protocol/EthernetPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EthernetPacket.o -MD -MP -MF $(DEPDIR)/EthernetPacket.Tpo -c -o EthernetPacket.o `test -f 'protocol/EthernetPacket.cpp' || echo '$(srcdir)/'`protocol/EthernetPacket.cpp
	$(am__mv) $(DEPDIR)/EthernetPacket.Tpo $(DEPDIR)/EthernetPacket.Po
#	source='protocol/EthernetPacket.cpp' object='EthernetPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EthernetPacket.o `test -f 'protocol/EthernetPacket.cpp' || echo '$(srcdir)/'`protocol/EthernetPacket.cpp

EthernetPacket.obj: protocol/EthernetPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EthernetPacket.obj -MD -MP -MF $(DEPDIR)/EthernetPacket.Tpo -c -o EthernetPacket.obj `if test -f 'protocol/EthernetPacket.cpp'; then $(CYGPATH_W) 'protocol/EthernetPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/EthernetPacket.cpp'; fi`
	$(am__mv) $(DEPDIR)/EthernetPacket.Tpo $(DEPDIR)/EthernetPacket.Po
#	source='protocol/EthernetPacket.cpp' object='EthernetPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EthernetPacket.obj `if test -f 'protocol/EthernetPacket.cpp'; then $(CYGPATH_W) 'protocol/EthernetPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/EthernetPacket.cpp'; fi`

Frame.o: protocol/Frame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Frame.o -MD -MP -MF $(DEPDIR)/Frame.Tpo -c -o Frame.o `test -f 'protocol/Frame.cpp' || echo '$(srcdir)/'`protocol/Frame.cpp
	$(am__mv) $(DEPDIR)/Frame.Tpo $(DEPDIR)/Frame.Po
#	source='protocol/Frame.cpp' object='Frame.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Frame.o `test -f 'protocol/Frame.cpp' || echo '$(srcdir)/'`protocol/Frame.cpp

Frame.obj: protocol/Frame.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Frame.obj -MD -MP -MF $(DEPDIR)/Frame.Tpo -c -o Frame.obj `if test -f 'protocol/Frame.cpp'; then $(CYGPATH_W) 'protocol/Frame.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/Frame.cpp'; fi`
	$(am__mv) $(DEPDIR)/Frame.Tpo $(DEPDIR)/Frame.Po
#	source='protocol/Frame.cpp' object='Frame.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Frame.obj `if test -f 'protocol/Frame.cpp'; then $(CYGPATH_W) 'protocol/Frame.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/Frame.cpp'; fi`

IcmpPacket.o: protocol/IcmpPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IcmpPacket.o -MD -MP -MF $(DEPDIR)/IcmpPacket.Tpo -c -o IcmpPacket.o `test -f 'protocol/IcmpPacket.cpp' || echo '$(srcdir)/'`protocol/IcmpPacket.cpp
	$(am__mv) $(DEPDIR)/IcmpPacket.Tpo $(DEPDIR)/IcmpPacket.Po
#	source='protocol/IcmpPacket.cpp' object='IcmpPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IcmpPacket.o `test -f 'protocol/IcmpPacket.cpp' || echo '$(srcdir)/'`protocol/IcmpPacket.cpp

IcmpPacket.obj: protocol/IcmpPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IcmpPacket.obj -MD -MP -MF $(DEPDIR)/IcmpPacket.Tpo -c -o IcmpPacket.obj `if test -f 'protocol/IcmpPacket.cpp'; then $(CYGPATH_W) 'protocol/IcmpPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/IcmpPacket.cpp'; fi`
	$(am__mv) $(DEPDIR)/IcmpPacket.Tpo $(DEPDIR)/IcmpPacket.Po
#	source='protocol/IcmpPacket.cpp' object='IcmpPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IcmpPacket.obj `if test -f 'protocol/IcmpPacket.cpp'; then $(CYGPATH_W) 'protocol/IcmpPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/IcmpPacket.cpp'; fi`

IpPacket.o: protocol/IpPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IpPacket.o -MD -MP -MF $(DEPDIR)/IpPacket.Tpo -c -o IpPacket.o `test -f 'protocol/IpPacket.cpp' || echo '$(srcdir)/'`protocol/IpPacket.cpp
	$(am__mv) $(DEPDIR)/IpPacket.Tpo $(DEPDIR)/IpPacket.Po
#	source='protocol/IpPacket.cpp' object='IpPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IpPacket.o `test -f 'protocol/IpPacket.cpp' || echo '$(srcdir)/'`protocol/IpPacket.cpp

IpPacket.obj: protocol/IpPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT IpPacket.obj -MD -MP -MF $(DEPDIR)/IpPacket.Tpo -c -o IpPacket.obj `if test -f 'protocol/IpPacket.cpp'; then $(CYGPATH_W) 'protocol/IpPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/IpPacket.cpp'; fi`
	$(am__mv) $(DEPDIR)/IpPacket.Tpo $(DEPDIR)/IpPacket.Po
#	source='protocol/IpPacket.cpp' object='IpPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o IpPacket.obj `if test -f 'protocol/IpPacket.cpp'; then $(CYGPATH_W) 'protocol/IpPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/IpPacket.cpp'; fi`

Ipv6Packet.o: protocol/Ipv6Packet.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Ipv6Packet.o -MD -MP -MF $(DEPDIR)/Ipv6Packet.Tpo -c -o Ipv6Packet.o `test -f 'protocol/Ipv6Packet.cpp' || echo '$(srcdir)/'`protocol/Ipv6Packet.cpp
	$(am__mv) $(DEPDIR)/Ipv6Packet.Tpo $(DEPDIR)/Ipv6Packet.Po
#	source='protocol/Ipv6Packet.cpp' object='Ipv6Packet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Ipv6Packet.o `test -f 'protocol/Ipv6Packet.cpp' || echo '$(srcdir)/'`protocol/Ipv6Packet.cpp

Ipv6Packet.obj: protocol/Ipv6Packet.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Ipv6Packet.obj -MD -MP -MF $(DEPDIR)/Ipv6Packet.Tpo -c -o Ipv6Packet.obj `if test -f 'protocol/Ipv6Packet.cpp'; then $(CYGPATH_W) 'protocol/Ipv6Packet.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/Ipv6Packet.cpp'; fi`
	$(am__mv) $(DEPDIR)/Ipv6Packet.Tpo $(DEPDIR)/Ipv6Packet.Po
#	source='protocol/Ipv6Packet.cpp' object='Ipv6Packet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Ipv6Packet.obj `if test -f 'protocol/Ipv6Packet.cpp'; then $(CYGPATH_W) 'protocol/Ipv6Packet.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/Ipv6Packet.cpp'; fi`

Packet.o: protocol/Packet.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Packet.o -MD -MP -MF $(DEPDIR)/Packet.Tpo -c -o Packet.o `test -f 'protocol/Packet.cpp' || echo '$(srcdir)/'`protocol/Packet.cpp
	$(am__mv) $(DEPDIR)/Packet.Tpo $(DEPDIR)/Packet.Po
#	source='protocol/Packet.cpp' object='Packet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Packet.o `test -f 'protocol/Packet.cpp' || echo '$(srcdir)/'`protocol/Packet.cpp

Packet.obj: protocol/Packet.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Packet.obj -MD -MP -MF $(DEPDIR)/Packet.Tpo -c -o Packet.obj `if test -f 'protocol/Packet.cpp'; then $(CYGPATH_W) 'protocol/Packet.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/Packet.cpp'; fi`
	$(am__mv) $(DEPDIR)/Packet.Tpo $(DEPDIR)/Packet.Po
#	source='protocol/Packet.cpp' object='Packet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Packet.obj `if test -f 'protocol/Packet.cpp'; then $(CYGPATH_W) 'protocol/Packet.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/Packet.cpp'; fi`

PayloadPacket.o: protocol/PayloadPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PayloadPacket.o -MD -MP -MF $(DEPDIR)/PayloadPacket.Tpo -c -o PayloadPacket.o `test -f 'protocol/PayloadPacket.cpp' || echo '$(srcdir)/'`protocol/PayloadPacket.cpp
	$(am__mv) $(DEPDIR)/PayloadPacket.Tpo $(DEPDIR)/PayloadPacket.Po
#	source='protocol/PayloadPacket.cpp' object='PayloadPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PayloadPacket.o `test -f 'protocol/PayloadPacket.cpp' || echo '$(srcdir)/'`protocol/PayloadPacket.cpp

PayloadPacket.obj: protocol/PayloadPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PayloadPacket.obj -MD -MP -MF $(DEPDIR)/PayloadPacket.Tpo -c -o PayloadPacket.obj `if test -f 'protocol/PayloadPacket.cpp'; then $(CYGPATH_W) 'protocol/PayloadPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/PayloadPacket.cpp'; fi`
	$(am__mv) $(DEPDIR)/PayloadPacket.Tpo $(DEPDIR)/PayloadPacket.Po
#	source='protocol/PayloadPacket.cpp' object='PayloadPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PayloadPacket.obj `if test -f 'protocol/PayloadPacket.cpp'; then $(CYGPATH_W) 'protocol/PayloadPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/PayloadPacket.cpp'; fi`

TcpPacket.o: protocol/TcpPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TcpPacket.o -MD -MP -MF $(DEPDIR)/TcpPacket.Tpo -c -o TcpPacket.o `test -f 'protocol/TcpPacket.cpp' || echo '$(srcdir)/'`protocol/TcpPacket.cpp
	$(am__mv) $(DEPDIR)/TcpPacket.Tpo $(DEPDIR)/TcpPacket.Po
#	source='protocol/TcpPacket.cpp' object='TcpPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TcpPacket.o `test -f 'protocol/TcpPacket.cpp' || echo '$(srcdir)/'`protocol/TcpPacket.cpp

TcpPacket.obj: protocol/TcpPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TcpPacket.obj -MD -MP -MF $(DEPDIR)/TcpPacket.Tpo -c -o TcpPacket.obj `if test -f 'protocol/TcpPacket.cpp'; then $(CYGPATH_W) 'protocol/TcpPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/TcpPacket.cpp'; fi`
	$(am__mv) $(DEPDIR)/TcpPacket.Tpo $(DEPDIR)/TcpPacket.Po
#	source='protocol/TcpPacket.cpp' object='TcpPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TcpPacket.obj `if test -f 'protocol/TcpPacket.cpp'; then $(CYGPATH_W) 'protocol/TcpPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/TcpPacket.cpp'; fi`

MplsPacket.o: protocol/MplsPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MplsPacket.o -MD -MP -MF $(DEPDIR)/MplsPacket.Tpo -c -o MplsPacket.o `test -f 'protocol/MplsPacket.cpp' || echo '$(srcdir)/'`protocol/MplsPacket.cpp
	$(am__mv) $(DEPDIR)/MplsPacket.Tpo $(DEPDIR)/MplsPacket.Po
#	source='protocol/MplsPacket.cpp' object='MplsPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MplsPacket.o `test -f 'protocol/MplsPacket.cpp' || echo '$(srcdir)/'`protocol/MplsPacket.cpp

MplsPacket.obj: protocol/MplsPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MplsPacket.obj -MD -MP -MF $(DEPDIR)/MplsPacket.Tpo -c -o MplsPacket.obj `if test -f 'protocol/MplsPacket.cpp'; then $(CYGPATH_W) 'protocol/MplsPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/MplsPacket.cpp'; fi`
	$(am__mv) $(DEPDIR)/MplsPacket.Tpo $(DEPDIR)/MplsPacket.Po
#	source='protocol/MplsPacket.cpp' object='MplsPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MplsPacket.obj `if test -f 'protocol/MplsPacket.cpp'; then $(CYGPATH_W) 'protocol/MplsPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/MplsPacket.cpp'; fi`

UdpPacket.o: protocol/UdpPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UdpPacket.o -MD -MP -MF $(DEPDIR)/UdpPacket.Tpo -c -o UdpPacket.o `test -f 'protocol/UdpPacket.cpp' || echo '$(srcdir)/'`protocol/UdpPacket.cpp
	$(am__mv) $(DEPDIR)/UdpPacket.Tpo $(DEPDIR)/UdpPacket.Po
#	source='protocol/UdpPacket.cpp' object='UdpPacket.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UdpPacket.o `test -f 'protocol/UdpPacket.cpp' || echo '$(srcdir)/'`protocol/UdpPacket.cpp

UdpPacket.obj: protocol/UdpPacket.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UdpPacket.obj -MD -MP -MF $(DEPDIR)/UdpPacket.Tpo -c -o UdpPacket.obj `if test -f 'protocol/UdpPacket.cpp'; then $(CYGPATH_W) 'protocol/UdpPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/UdpPacket.cpp'; fi`
	$(am__mv) $(DEPDIR)/UdpPacket.Tpo $(DEPDIR)/UdpPacket.Po
#	source='protocol/UdpPacket.cpp' object='UdpPacket.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UdpPacket.obj `if test -f 'protocol/UdpPacket.cpp'; then $(CYGPATH_W) 'protocol/UdpPacket.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/UdpPacket.cpp'; fi`

PacketFactory.o: protocol/PacketFactory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PacketFactory.o -MD -MP -MF $(DEPDIR)/PacketFactory.Tpo -c -o PacketFactory.o `test -f 'protocol/PacketFactory.cpp' || echo '$(srcdir)/'`protocol/PacketFactory.cpp
	$(am__mv) $(DEPDIR)/PacketFactory.Tpo $(DEPDIR)/PacketFactory.Po
#	source='protocol/PacketFactory.cpp' object='PacketFactory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PacketFactory.o `test -f 'protocol/PacketFactory.cpp' || echo '$(srcdir)/'`protocol/PacketFactory.cpp

PacketFactory.obj: protocol/PacketFactory.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PacketFactory.obj -MD -MP -MF $(DEPDIR)/PacketFactory.Tpo -c -o PacketFactory.obj `if test -f 'protocol/PacketFactory.cpp'; then $(CYGPATH_W) 'protocol/PacketFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/PacketFactory.cpp'; fi`
	$(am__mv) $(DEPDIR)/PacketFactory.Tpo $(DEPDIR)/PacketFactory.Po
#	source='protocol/PacketFactory.cpp' object='PacketFactory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PacketFactory.obj `if test -f 'protocol/PacketFactory.cpp'; then $(CYGPATH_W) 'protocol/PacketFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/PacketFactory.cpp'; fi`

ProtocolNameResolver.o: protocol/ProtocolNameResolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ProtocolNameResolver.o -MD -MP -MF $(DEPDIR)/ProtocolNameResolver.Tpo -c -o ProtocolNameResolver.o `test -f 'protocol/ProtocolNameResolver.cpp' || echo '$(srcdir)/'`protocol/ProtocolNameResolver.cpp
	$(am__mv) $(DEPDIR)/ProtocolNameResolver.Tpo $(DEPDIR)/ProtocolNameResolver.Po
#	source='protocol/ProtocolNameResolver.cpp' object='ProtocolNameResolver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ProtocolNameResolver.o `test -f 'protocol/ProtocolNameResolver.cpp' || echo '$(srcdir)/'`protocol/ProtocolNameResolver.cpp

ProtocolNameResolver.obj: protocol/ProtocolNameResolver.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ProtocolNameResolver.obj -MD -MP -MF $(DEPDIR)/ProtocolNameResolver.Tpo -c -o ProtocolNameResolver.obj `if test -f 'protocol/ProtocolNameResolver.cpp'; then $(CYGPATH_W) 'protocol/ProtocolNameResolver.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/ProtocolNameResolver.cpp'; fi`
	$(am__mv) $(DEPDIR)/ProtocolNameResolver.Tpo $(DEPDIR)/ProtocolNameResolver.Po
#	source='protocol/ProtocolNameResolver.cpp' object='ProtocolNameResolver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ProtocolNameResolver.obj `if test -f 'protocol/ProtocolNameResolver.cpp'; then $(CYGPATH_W) 'protocol/ProtocolNameResolver.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol/ProtocolNameResolver.cpp'; fi`

FrameBuffer.o: network/FrameBuffer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FrameBuffer.o -MD -MP -MF $(DEPDIR)/FrameBuffer.Tpo -c -o FrameBuffer.o `test -f 'network/FrameBuffer.cpp' || echo '$(srcdir)/'`network/FrameBuffer.cpp
	$(am__mv) $(DEPDIR)/FrameBuffer.Tpo $(DEPDIR)/FrameBuffer.Po
#	source='network/FrameBuffer.cpp' object='FrameBuffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FrameBuffer.o `test -f 'network/FrameBuffer.cpp' || echo '$(srcdir)/'`network/FrameBuffer.cpp

FrameBuffer.obj: network/FrameBuffer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FrameBuffer.obj -MD -MP -MF $(DEPDIR)/FrameBuffer.Tpo -c -o FrameBuffer.obj `if test -f 'network/FrameBuffer.cpp'; then $(CYGPATH_W) 'network/FrameBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/network/FrameBuffer.cpp'; fi`
	$(am__mv) $(DEPDIR)/FrameBuffer.Tpo $(DEPDIR)/FrameBuffer.Po
#	source='network/FrameBuffer.cpp' object='FrameBuffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FrameBuffer.obj `if test -f 'network/FrameBuffer.cpp'; then $(CYGPATH_W) 'network/FrameBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/network/FrameBuffer.cpp'; fi`

NetworkInterface.o: network/NetworkInterface.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NetworkInterface.o -MD -MP -MF $(DEPDIR)/NetworkInterface.Tpo -c -o NetworkInterface.o `test -f 'network/NetworkInterface.cpp' || echo '$(srcdir)/'`network/NetworkInterface.cpp
	$(am__mv) $(DEPDIR)/NetworkInterface.Tpo $(DEPDIR)/NetworkInterface.Po
#	source='network/NetworkInterface.cpp' object='NetworkInterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NetworkInterface.o `test -f 'network/NetworkInterface.cpp' || echo '$(srcdir)/'`network/NetworkInterface.cpp

NetworkInterface.obj: network/NetworkInterface.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NetworkInterface.obj -MD -MP -MF $(DEPDIR)/NetworkInterface.Tpo -c -o NetworkInterface.obj `if test -f 'network/NetworkInterface.cpp'; then $(CYGPATH_W) 'network/NetworkInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/network/NetworkInterface.cpp'; fi`
	$(am__mv) $(DEPDIR)/NetworkInterface.Tpo $(DEPDIR)/NetworkInterface.Po
#	source='network/NetworkInterface.cpp' object='NetworkInterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NetworkInterface.obj `if test -f 'network/NetworkInterface.cpp'; then $(CYGPATH_W) 'network/NetworkInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/network/NetworkInterface.cpp'; fi`

NetworkManager.o: network/NetworkManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NetworkManager.o -MD -MP -MF $(DEPDIR)/NetworkManager.Tpo -c -o NetworkManager.o `test -f 'network/NetworkManager.cpp' || echo '$(srcdir)/'`network/NetworkManager.cpp
	$(am__mv) $(DEPDIR)/NetworkManager.Tpo $(DEPDIR)/NetworkManager.Po
#	source='network/NetworkManager.cpp' object='NetworkManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NetworkManager.o `test -f 'network/NetworkManager.cpp' || echo '$(srcdir)/'`network/NetworkManager.cpp

NetworkManager.obj: network/NetworkManager.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NetworkManager.obj -MD -MP -MF $(DEPDIR)/NetworkManager.Tpo -c -o NetworkManager.obj `if test -f 'network/NetworkManager.cpp'; then $(CYGPATH_W) 'network/NetworkManager.cpp'; else $(CYGPATH_W) '$(srcdir)/network/NetworkManager.cpp'; fi`
	$(am__mv) $(DEPDIR)/NetworkManager.Tpo $(DEPDIR)/NetworkManager.Po
#	source='network/NetworkManager.cpp' object='NetworkManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NetworkManager.obj `if test -f 'network/NetworkManager.cpp'; then $(CYGPATH_W) 'network/NetworkManager.cpp'; else $(CYGPATH_W) '$(srcdir)/network/NetworkManager.cpp'; fi`

NetworkInterfaceOmnetpp.o: network/omnetpp/NetworkInterfaceOmnetpp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NetworkInterfaceOmnetpp.o -MD -MP -MF $(DEPDIR)/NetworkInterfaceOmnetpp.Tpo -c -o NetworkInterfaceOmnetpp.o `test -f 'network/omnetpp/NetworkInterfaceOmnetpp.cpp' || echo '$(srcdir)/'`network/omnetpp/NetworkInterfaceOmnetpp.cpp
	$(am__mv) $(DEPDIR)/NetworkInterfaceOmnetpp.Tpo $(DEPDIR)/NetworkInterfaceOmnetpp.Po
#	source='network/omnetpp/NetworkInterfaceOmnetpp.cpp' object='NetworkInterfaceOmnetpp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NetworkInterfaceOmnetpp.o `test -f 'network/omnetpp/NetworkInterfaceOmnetpp.cpp' || echo '$(srcdir)/'`network/omnetpp/NetworkInterfaceOmnetpp.cpp

NetworkInterfaceOmnetpp.obj: network/omnetpp/NetworkInterfaceOmnetpp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NetworkInterfaceOmnetpp.obj -MD -MP -MF $(DEPDIR)/NetworkInterfaceOmnetpp.Tpo -c -o NetworkInterfaceOmnetpp.obj `if test -f 'network/omnetpp/NetworkInterfaceOmnetpp.cpp'; then $(CYGPATH_W) 'network/omnetpp/NetworkInterfaceOmnetpp.cpp'; else $(CYGPATH_W) '$(srcdir)/network/omnetpp/NetworkInterfaceOmnetpp.cpp'; fi`
	$(am__mv) $(DEPDIR)/NetworkInterfaceOmnetpp.Tpo $(DEPDIR)/NetworkInterfaceOmnetpp.Po
#	source='network/omnetpp/NetworkInterfaceOmnetpp.cpp' object='NetworkInterfaceOmnetpp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NetworkInterfaceOmnetpp.obj `if test -f 'network/omnetpp/NetworkInterfaceOmnetpp.cpp'; then $(CYGPATH_W) 'network/omnetpp/NetworkInterfaceOmnetpp.cpp'; else $(CYGPATH_W) '$(srcdir)/network/omnetpp/NetworkInterfaceOmnetpp.cpp'; fi`

NetworkInterfacePcap.o: network/libpcap/NetworkInterfacePcap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NetworkInterfacePcap.o -MD -MP -MF $(DEPDIR)/NetworkInterfacePcap.Tpo -c -o NetworkInterfacePcap.o `test -f 'network/libpcap/NetworkInterfacePcap.cpp' || echo '$(srcdir)/'`network/libpcap/NetworkInterfacePcap.cpp
	$(am__mv) $(DEPDIR)/NetworkInterfacePcap.Tpo $(DEPDIR)/NetworkInterfacePcap.Po
#	source='network/libpcap/NetworkInterfacePcap.cpp' object='NetworkInterfacePcap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NetworkInterfacePcap.o `test -f 'network/libpcap/NetworkInterfacePcap.cpp' || echo '$(srcdir)/'`network/libpcap/NetworkInterfacePcap.cpp

NetworkInterfacePcap.obj: network/libpcap/NetworkInterfacePcap.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NetworkInterfacePcap.obj -MD -MP -MF $(DEPDIR)/NetworkInterfacePcap.Tpo -c -o NetworkInterfacePcap.obj `if test -f 'network/libpcap/NetworkInterfacePcap.cpp'; then $(CYGPATH_W) 'network/libpcap/NetworkInterfacePcap.cpp'; else $(CYGPATH_W) '$(srcdir)/network/libpcap/NetworkInterfacePcap.cpp'; fi`
	$(am__mv) $(DEPDIR)/NetworkInterfacePcap.Tpo $(DEPDIR)/NetworkInterfacePcap.Po
#	source='network/libpcap/NetworkInterfacePcap.cpp' object='NetworkInterfacePcap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NetworkInterfacePcap.obj `if test -f 'network/libpcap/NetworkInterfacePcap.cpp'; then $(CYGPATH_W) 'network/libpcap/NetworkInterfacePcap.cpp'; else $(CYGPATH_W) '$(srcdir)/network/libpcap/NetworkInterfacePcap.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-nobase_libdistackbase_aHEADERS: $(nobase_libdistackbase_a_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libdistackbase_adir)" || $(MKDIR_P) "$(DESTDIR)$(libdistackbase_adir)"
	@list='$(nobase_libdistackbase_a_HEADERS)'; test -n "$(libdistackbase_adir)" || list=; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo "$(MKDIR_P) '$(DESTDIR)$(libdistackbase_adir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(libdistackbase_adir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(libdistackbase_adir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(libdistackbase_adir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_libdistackbase_aHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_libdistackbase_a_HEADERS)'; test -n "$(libdistackbase_adir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libdistackbase_adir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libdistackbase_adir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdistackbase_adir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_libdistackbase_aHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES \
	uninstall-nobase_libdistackbase_aHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLIBRARIES install-man \
	install-nobase_libdistackbase_aHEADERS install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLIBRARIES \
	uninstall-nobase_libdistackbase_aHEADERS


#  # compiler flags specific to debug versions

  #omnet specific linker and compiler flags

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
